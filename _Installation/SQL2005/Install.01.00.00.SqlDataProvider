/******* TABLES *******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_Measurements') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}WeatherGateway_Measurements(
 [MeasurementId] [int] IDENTITY(1,1) NOT NULL,
 [StationId] [int] NOT NULL,
 [Datime] [datetime] NOT NULL,
 [Humidity] [float] NULL,
 [Temperature] [float] NULL,
 [Pressure] [float] NULL,
 [WindAverage] [float] NULL,
 [WindMaximum] [float] NULL,
 [WindDirection] [int] NULL,
 CONSTRAINT PK_{objectQualifier}WeatherGateway_Measurements PRIMARY KEY CLUSTERED 
(
 [MeasurementId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_Stations') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}WeatherGateway_Stations(
 [StationId] [int] IDENTITY(1,1) NOT NULL,
 [Provider] [varchar](10) NULL,
 [Code] [nvarchar](50) NULL,
 [Name] [nvarchar](100) NULL,
 [Latitude] [float] NULL,
 [Longitude] [float] NULL,
 [Altitude] [int] NULL,
 [LastSuccessfulRetrieval] [datetime] NULL,
 [LatestStatus] [nvarchar](100) NULL,
 [SMSCode] [varchar](10) NULL,
 CONSTRAINT PK_{objectQualifier}WeatherGateway_Stations PRIMARY KEY CLUSTERED 
(
 [StationId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

/******* STRUCTURE *******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}WeatherGateway_Measurements_Stations') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_Measurements'))
ALTER TABLE {databaseOwner}{objectQualifier}WeatherGateway_Measurements  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}WeatherGateway_Measurements_Stations FOREIGN KEY([StationId])
REFERENCES {databaseOwner}{objectQualifier}WeatherGateway_Stations ([StationId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}WeatherGateway_Measurements_Stations') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_Measurements'))
ALTER TABLE {databaseOwner}{objectQualifier}WeatherGateway_Measurements CHECK CONSTRAINT FK_{objectQualifier}WeatherGateway_Measurements_Stations
GO

/******* TRIGGERS *******/
/******* VIEWS *******/
/******* FUNCTIONS *******/
/******* SPROCS *******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_AddMeasurement') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_AddMeasurement
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_AddMeasurement
 @Datime DATETIME, 
 @Humidity FLOAT, 
 @Pressure FLOAT, 
 @StationId INT, 
 @Temperature FLOAT, 
 @WindAverage FLOAT, 
 @WindDirection INT, 
 @WindMaximum FLOAT
AS
IF NOT EXISTS
 (SELECT * FROM {databaseOwner}{objectQualifier}WeatherGateway_Measurements
  WHERE [StationId]=@StationId AND [Datime]=@Datime)
BEGIN
INSERT INTO {databaseOwner}{objectQualifier}WeatherGateway_Measurements (
 [Datime],
 [Humidity],
 [Pressure],
 [StationId],
 [Temperature],
 [WindAverage],
 [WindDirection],
 [WindMaximum]
)
 VALUES ( @Datime, @Humidity, @Pressure, @StationId, @Temperature, @WindAverage, @WindDirection, @WindMaximum)
select SCOPE_IDENTITY()
END
ELSE
SELECT -1
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_AddStation') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_AddStation
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_AddStation
 @Altitude INT, 
 @Code NVARCHAR (50), 
 @LastSuccessfulRetrieval DATETIME, 
 @LatestStatus NVARCHAR (100), 
 @Latitude FLOAT, 
 @Longitude FLOAT, 
 @Name NVARCHAR (100), 
 @Provider VARCHAR (10), 
 @SMSCode VARCHAR (10)
AS
INSERT INTO {databaseOwner}{objectQualifier}WeatherGateway_Stations (
 [Altitude],
 [Code],
 [LastSuccessfulRetrieval],
 [LatestStatus],
 [Latitude],
 [Longitude],
 [Name],
 [Provider],
 [SMSCode]
)
 VALUES ( @Altitude, @Code, @LastSuccessfulRetrieval, @LatestStatus, @Latitude, @Longitude, @Name, @Provider, @SMSCode)
select SCOPE_IDENTITY()
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_GetLatestMeasurements') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetLatestMeasurements
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetLatestMeasurements
AS
SELECT
 m.*
FROM
 {databaseOwner}{objectQualifier}WeatherGateway_Measurements m
 INNER JOIN {databaseOwner}{objectQualifier}WeatherGateway_Stations s ON s.StationId=m.StationId
 INNER JOIN
  (SELECT MAX(m1.Datime) Datime,
          m1.StationId
   FROM {databaseOwner}{objectQualifier}WeatherGateway_Measurements m1
   GROUP BY m1.StationId) latest ON latest.Datime=m.Datime AND latest.StationId=m.StationId
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_GetStation') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetStation
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetStation
 @StationId INT,
 @Provider VARCHAR(10),
 @StationCode NVARCHAR(50),
 @SMSCode VARCHAR(10)
AS
SELECT
 s.*
FROM {databaseOwner}{objectQualifier}WeatherGateway_Stations s
WHERE
 (s.Code=@StationCode AND s.Provider=@Provider)
 OR s.StationId = @StationId
 OR s.SMSCode = @SMSCode
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_GetStations') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetStations
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetStations
AS
SELECT
 s.*
FROM {databaseOwner}{objectQualifier}WeatherGateway_Stations s
ORDER BY s.Name
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_GetStationsToFollow') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetStationsToFollow
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_GetStationsToFollow
AS
DECLARE @Stations VARCHAR(4000);
SET @Stations = (SELECT
 ms.SettingValue + ';'
FROM {databaseOwner}{objectQualifier}DesktopModules dm
 INNER JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON md.DesktopModuleID = dm.DesktopModuleID
 INNER JOIN {databaseOwner}{objectQualifier}Modules m ON m.ModuleDefID = md.ModuleDefID
 INNER JOIN {databaseOwner}{objectQualifier}ModuleSettings ms ON ms.ModuleID = m.ModuleID
WHERE
 dm.FolderName='Albatros\WeatherGateway'
 AND ms.SettingName='StationsToShow'
FOR XML PATH(''));
SELECT
 s.*
FROM {databaseOwner}{objectQualifier}WeatherGateway_Stations s
 INNER JOIN (SELECT DISTINCT(RecordID)
FROM {databaseOwner}{objectQualifier}SplitDelimitedIDs(@Stations, ';')) x ON x.RecordID = s.StationId
ORDER BY s.Name;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}WeatherGateway_UpdateStation') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_UpdateStation
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}WeatherGateway_UpdateStation
 @Altitude INT, 
 @Code NVARCHAR (50), 
 @LastSuccessfulRetrieval DATETIME, 
 @LatestStatus NVARCHAR (100), 
 @Latitude FLOAT, 
 @Longitude FLOAT, 
 @Name NVARCHAR (100), 
 @Provider VARCHAR (10), 
 @SMSCode VARCHAR (10), 
 @StationId INT
AS
UPDATE {databaseOwner}{objectQualifier}WeatherGateway_Stations SET
 [Altitude] = @Altitude,
 [Code] = @Code,
 [LastSuccessfulRetrieval] = @LastSuccessfulRetrieval,
 [LatestStatus] = @LatestStatus,
 [Latitude] = @Latitude,
 [Longitude] = @Longitude,
 [Name] = @Name,
 [Provider] = @Provider,
 [SMSCode] = @SMSCode
WHERE
 [StationId] = @StationId
GO

/******* SCHEDULE *******/

INSERT INTO {databaseOwner}[{objectQualifier}Schedule] ([TypeFullName], [TimeLapse], [TimeLapseMeasurement], [RetryTimeLapse], [RetryTimeLapseMeasurement], [RetainHistoryNum], [AttachToEvent], [CatchUpEnabled], [Enabled], [ObjectDependencies], [Servers], [FriendlyName])
VALUES ('Albatros.DNN.Modules.WeatherGateway.WeatherRetrievalService, ALBATROS.DNN.MODULES.WEATHERGATEWAY', 10, 'm', 20, 'm', 20, '', 0, 1, '', NULL, 'Albatros Weather Retrieval Service')
GO

